local function map(mode, key, action, desc)
	vim.keymap.set(mode, key, action, { buffer = 0, desc = desc })
end

map("n", "<leader>lgD", vim.lsp.buf.declaration, "Go to declaration")

map("n", "<leader>lgd", vim.lsp.buf.definition, "Go to definition")
map("n", "<leader>lgt", vim.lsp.buf.type_definition, "Go to type")
map("n", "<leader>lgi", vim.lsp.buf.implementation, "List implementations")
map("n", "<leader>lgr", vim.lsp.buf.references, "List references")
map("n", "<leader>lgn", vim.diagnostic.goto_next, "Go to next diagnostic")
map("n", "<leader>lgp", vim.diagnostic.goto_prev, "Go to previous diagnostic")
map("n", "<leader>le", vim.diagnostic.open_float, "Open diagnostic float")
map("n", "<leader>lH", vim.lsp.buf.document_highlight, "Document highlight")
map("n", "<leader>lS", vim.lsp.buf.document_symbol, "List document symbols")
map("n", "<leader>lwa", vim.lsp.buf.add_workspace_folder, "Add workspace folder")
map("n", "<leader>lwr", vim.lsp.buf.remove_workspace_folder, "Remove workspace folder")
map("n", "<leader>lwl", function()
	vim.notify(vim.inspect(vim.lsp.buf.list_workspace_folders()))
end, "List workspace folders")
map("n", "<leader>lws", vim.lsp.buf.workspace_symbol, "List workspace symbols")
map("n", "<leader>lh", vim.lsp.buf.hover, "Trigger hover")
map("n", "<leader>ls", vim.lsp.buf.signature_help, "Signature help")
map("n", "<leader>rn", vim.lsp.buf.rename, "Rename symbol")
map("n", "<leader>ca", vim.lsp.buf.code_action, "Code action")
map("n", "<leader>lf", vim.lsp.buf.format, "Format")

map("n", "<leader>ltd", function()
	vim.diagnostic.enable(not vim.diagnostic.is_enabled())
end, "Toggle diagnostics")
map("n", "<leader>ltf", function()
	vim.b.disableFormatSave = not vim.b.disableFormatSave
end, "Toggle format on save")
